# Generated by Django 2.0b1 on 2017-10-27 06:55

import django.core.validators
from django.db import migrations, models
import django_crypto_fields.fields.firstname_field


class Migration(migrations.Migration):

    dependencies = [
        ('cancer_subject', '0004_identifierhistory'),
    ]

    operations = [
        migrations.AlterField(
            model_name='historicalsubjectconsent',
            name='language',
            field=models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], help_text='The language used for the edc_consent process will also be used during data collection.', max_length=25, verbose_name='Language of consent'),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='age_in_years',
            field=models.IntegerField(null=True, verbose_name='Age in years as reported by patient'),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='citizen',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('unknown', 'Unknown')], max_length=7, null=True, verbose_name='Are you a Botswana citizen? '),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='first_name',
            field=django_crypto_fields.fields.firstname_field.FirstnameField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, null=True, validators=[django.core.validators.RegexValidator('^[A-Z]{1,250}$', 'Ensure first name is in CAPS and does not contain any spaces or numbers')], verbose_name='First name'),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='gender',
            field=models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Undetermined')], max_length=1, null=True, verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='guardian',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='If a minor age 16 and 17, ensure a guardian is available otherwise participant will not be enrolled.', max_length=10, null=True, verbose_name='If minor, is there a guardian available? '),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='has_identity',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="Allow Omang, Passport number, driver's license number or Omang receipt number. If 'NO' participant will not be enrolled.", max_length=10, null=True, verbose_name='[Interviewer] Has the subject presented a valid OMANG or other identity document?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='inability_to_participate',
            field=models.CharField(choices=[('able', 'ABLE to participate'), ('Mental Incapacity', 'Mental Incapacity'), ('Deaf/Mute', 'Deaf/Mute'), ('Too sick', 'Too sick'), ('Incarcerated', 'Incarcerated'), ('OTHER', 'Other, specify.'), ('N/A', 'Not applicable')], help_text='Participant can only participate if NONE is selected. (Any of these reasons make the participant unable to take part in the informed consent process)', max_length=17, null=True, verbose_name='Do any of the following reasons apply to the participant?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='initials',
            field=models.CharField(max_length=3, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(3), django.core.validators.RegexValidator('^[A-Z]{1,3}$', 'Must be Only CAPS and 2 or 3 letters. No spaces or numbers allowed.')], verbose_name='Initials'),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='legal_marriage',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text="If 'NO' participant is not eligible.", max_length=3, null=True, verbose_name='If not a citizen, are you legally married to a Botswana Citizen?'),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='literacy',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('unknown', 'Unknown')], help_text='If participate is illiterate, confirm there is a literatewitness available otherwise participant is not eligible.', max_length=7, null=True, verbose_name='Is the participant LITERATE?, or if ILLITERATE, is there a  LITERATE witness available '),
        ),
        migrations.AlterField(
            model_name='historicalsubjecteligibility',
            name='marriage_certificate',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text="If 'NO' participant is not eligible.", max_length=3, null=True, verbose_name='[Interviewer] Has the participant produced the marriage certificate, as proof? '),
        ),
        migrations.AlterField(
            model_name='subjectconsent',
            name='language',
            field=models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], help_text='The language used for the edc_consent process will also be used during data collection.', max_length=25, verbose_name='Language of consent'),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='age_in_years',
            field=models.IntegerField(null=True, verbose_name='Age in years as reported by patient'),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='citizen',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('unknown', 'Unknown')], max_length=7, null=True, verbose_name='Are you a Botswana citizen? '),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='first_name',
            field=django_crypto_fields.fields.firstname_field.FirstnameField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, null=True, validators=[django.core.validators.RegexValidator('^[A-Z]{1,250}$', 'Ensure first name is in CAPS and does not contain any spaces or numbers')], verbose_name='First name'),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='gender',
            field=models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Undetermined')], max_length=1, null=True, verbose_name='Gender'),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='guardian',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='If a minor age 16 and 17, ensure a guardian is available otherwise participant will not be enrolled.', max_length=10, null=True, verbose_name='If minor, is there a guardian available? '),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='has_identity',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="Allow Omang, Passport number, driver's license number or Omang receipt number. If 'NO' participant will not be enrolled.", max_length=10, null=True, verbose_name='[Interviewer] Has the subject presented a valid OMANG or other identity document?'),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='inability_to_participate',
            field=models.CharField(choices=[('able', 'ABLE to participate'), ('Mental Incapacity', 'Mental Incapacity'), ('Deaf/Mute', 'Deaf/Mute'), ('Too sick', 'Too sick'), ('Incarcerated', 'Incarcerated'), ('OTHER', 'Other, specify.'), ('N/A', 'Not applicable')], help_text='Participant can only participate if NONE is selected. (Any of these reasons make the participant unable to take part in the informed consent process)', max_length=17, null=True, verbose_name='Do any of the following reasons apply to the participant?'),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='initials',
            field=models.CharField(max_length=3, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(3), django.core.validators.RegexValidator('^[A-Z]{1,3}$', 'Must be Only CAPS and 2 or 3 letters. No spaces or numbers allowed.')], verbose_name='Initials'),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='legal_marriage',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text="If 'NO' participant is not eligible.", max_length=3, null=True, verbose_name='If not a citizen, are you legally married to a Botswana Citizen?'),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='literacy',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('unknown', 'Unknown')], help_text='If participate is illiterate, confirm there is a literatewitness available otherwise participant is not eligible.', max_length=7, null=True, verbose_name='Is the participant LITERATE?, or if ILLITERATE, is there a  LITERATE witness available '),
        ),
        migrations.AlterField(
            model_name='subjecteligibility',
            name='marriage_certificate',
            field=models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text="If 'NO' participant is not eligible.", max_length=3, null=True, verbose_name='[Interviewer] Has the participant produced the marriage certificate, as proof? '),
        ),
    ]
